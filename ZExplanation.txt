###########################################################################################
open terminal and run below command to create package.jason file
-------------------------------------------------------------------------------------------

npm init -y

-------------------------------------------------------------------------------------------
above command will create package.jason file
###########################################################################################




###########################################################################################
open terminal and run below command to install all dependencies
-------------------------------------------------------------------------------------------

npm i bcryptjs connect-flash express-session ejs express-ejs-layouts express mongoose passport passport-local -D nodemon

-------------------------------------------------------------------------------------------
above code will install all needed dependencies for our passport authentication project
###########################################################################################




###########################################################################################
package.jason
-------------------------------------------------------------------------------------------

  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },

-------------------------------------------------------------------------------------------
replace above with below code
-------------------------------------------------------------------------------------------
  
  "scripts": {
    "start": "node app.js",
    "dev": "nodemon app.js"
  },

-------------------------------------------------------------------------------------------
###########################################################################################





###########################################################################################
app.js
-------------------------------------------------------------------------------------------

const express = require('express');
const app = express();
const PORT = process.env.PORT || 5000;
app.listen(PORT, console.log(`Server started at on port ${PORT}, http://localhost:5000/`));

-------------------------------------------------------------------------------------------

"npm run dev" --> Start the Server
"ctrl+c" --> to stop server

above line --> to setup our local server
###########################################################################################



###########################################################################################
routes/index.js
-------------------------------------------------------------------------------------------

const express = require('express');
const router = express.Router();

router.get('/', (req, res) => res.send('Welcome'));

module.exports = router;

-------------------------------------------------------------------------------------------
we are exporting our above codes to app.js
this will check the send and recieve request for home page
###########################################################################################



###########################################################################################
app.js
-------------------------------------------------------------------------------------------

// Routes
app.use('/', require('./routes/index.js'));

-------------------------------------------------------------------------------------------
above code will import the send-request method to check homeage
"npm run dev" --> Start the Server
"ctrl+c" --> to stop server

visit below to see 'welcome' text at homeage
http://localhost:5000/
###########################################################################################





###########################################################################################
routes/users.js
-------------------------------------------------------------------------------------------

const express = require('express');
const router = express.Router();

//Login page
router.get('/login', (req, res) => res.send('Checking logging'));

//Register page
router.get('/register', (req, res) => res.send('Checking register'));

module.exports = router;

-------------------------------------------------------------------------------------------
we are exporting our above codes to app.js
this will check the login and register page
###########################################################################################


###########################################################################################
app.js
-------------------------------------------------------------------------------------------

app.use('/users', require('./routes/users.js'));

-------------------------------------------------------------------------------------------
add above code in //Routes location
above code will import the users.js to check login and register page
"npm run dev" --> Start the Server
"ctrl+c" --> to stop server

visit below to see 'welcome' text at homeage
http://localhost:5000/
visit below to see 'login' page
http://localhost:5000/users/login/
visit below to see 'register' page
http://localhost:5000/users/register/
###########################################################################################





###########################################################################################
app.js
-------------------------------------------------------------------------------------------

const expressLayouts = require('express-ejs-layouts');

// EJS Middleware
app.use(expressLayouts);
app.set('view engine','ejs');

-------------------------------------------------------------------------------------------
above code will help to setup UI
###########################################################################################





###########################################################################################
views folder contains all ejs-pages templates layouts-UI
-------------------------------------------------------------------------------------------

dashboard.ejs
layout.ejs
login.ejs
register.ejs
welcome.ejs

-------------------------------------------------------------------------------------------
go to git reposotory and copy the above files
###########################################################################################





###########################################################################################
routes/user.js
-------------------------------------------------------------------------------------------

router.get('/login', (req, res) => res.send('Checking logging'));
router.get('/register', (req, res) => res.send('Checking register'));

-------------------------------------------------------------------------------------------
above code will change to below
-------------------------------------------------------------------------------------------

router.get('/login', (req, res) => res.render('login.ejs'));
router.get('/register', (req, res) => res.render('register.ejs'));

-------------------------------------------------------------------------------------------
above code will relink the viewsfolder pages
###########################################################################################




###########################################################################################
routes/index.js
-------------------------------------------------------------------------------------------

router.get('/', (req, res) => res.send('welcome.ejs'));
-------------------------------------------------------------------------------------------
change above code with below code
-------------------------------------------------------------------------------------------
router.get('/', (req, res) => res.render('welcome.ejs'));

-------------------------------------------------------------------------------------------
above code will relink the viewsfolder pages
###########################################################################################




// Till here
1. Home page
2. Login page
3. Register page 
 all three pages UI is set properly


now below we will connect mongoose database to our server














###########################################################################################
config/keys.js
-------------------------------------------------------------------------------------------

module.exports={
    MongoURI: 'paste your code here'
}

-------------------------------------------------------------------------------------------
paste your MongoURI code like below and change its username and password as below
-------------------------------------------------------------------------------------------

module.exports = {
    MongoURI: 'mongodb+srv://admin:i5fWxzUHeWyKdJBi@cluster0.jwg9tf8.mongodb.net/?retryWrites=true&w=majority'
}

-------------------------------------------------------------------------------------------
above code will setup and link Mongodb databse
###########################################################################################



###########################################################################################
app.js
-------------------------------------------------------------------------------------------

const mongoose = require('mongoose');

// DB Config
const db = require('./config/keys').MongoURI;

// Connect to mongo
mongoose.connect(db, { useNewUrlParser: true })
    .then(() => console.log('MongoDB connected...'))
    .catch(err => console.log(err));

-------------------------------------------------------------------------------------------
above code will connect mongodb key to app.js
###########################################################################################





###########################################################################################
models/User.js
-------------------------------------------------------------------------------------------

const mongoose = require('mongoose');
const UserSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true
    },
    email: {
        type: String,
        required: true
    },
    password: {
        type: String,
        required: true
    },
    date: {
        type: Date,
        default: Date.now
    }
});

const User = mongoose.model('User', UserSchema);

module.exports = User;

-------------------------------------------------------------------------------------------
above mongodb code will export for app.js
###########################################################################################





###########################################################################################
app.js
-------------------------------------------------------------------------------------------

// BodyParser
app.use(express.urlencoded({ extended: false }));

-------------------------------------------------------------------------------------------
used to process data sent in an HTTP request body. It provides four express middleware for parsing JSON, Text, URL-encoded, and raw data sets over an HTTP request body
###########################################################################################






###########################################################################################
routes/users.js
-------------------------------------------------------------------------------------------

// Register Handle
router.post('/register',(req,res)=>{
    console.log(req.body);
    res.send('hello');
});


-------------------------------------------------------------------------------------------
visit http://localhost:5000/users/register and enter all information and register youself
after registration hello will popup
and all information entered in above register handle will be shown in terminal
which we will use below to check for errors if user enters wrong or invalid information for registration
###########################################################################################




###########################################################################################
routes/users.js
-------------------------------------------------------------------------------------------

// Register Handle
router.post('/register',(req,res)=>{
    console.log(req.body)
    res.send('hello');
});

-------------------------------------------------------------------------------------------
replace above code with below code
-------------------------------------------------------------------------------------------

// Register Handle
router.post('/register', (req, res) => {
    const { name, email, password, password2 } = req.body;
    let errors = [];

    // check required field for error
    if (!name || !email || !password || !password2) {
        errors.push({ msg: 'Please fill all required fields' });
    }

    // checks for length of password
    if (password.length < 6) {
        errors.push({ msg: 'password should be of atleast 6 characters' });
    }

    // checks if password match
    if (password != password2) {
        errors.push({ msg: 'passwords do not match' });
    }

    // if name or email or passwords are entered then they are not cleared after an error, fields are not completely empty
    if (errors.length > 0) {
        res.render('register', {
            errors, name, email, password
        });
    }

    else {
        res.send('pass');
    }

});

-------------------------------------------------------------------------------------------
visit  http://localhost:5000/users/register
and see for above changes
here no errors will show.
###########################################################################################







###########################################################################################
views/partial/messages.ejs
-------------------------------------------------------------------------------------------

<% if(typeof errors != 'undefined'){ %>
    <% errors.forEach(function(error){ %>
        <%= error.msg %>
    <% }); %>
<% } %>

-------------------------------------------------------------------------------------------
above code will show errors if required fields are not filled completely
we have to link this to views/register.ejs file to users.ejs
###########################################################################################




###########################################################################################
views/register.ejs
-------------------------------------------------------------------------------------------
      
        <%= include ("./partials/messages.ejs"); %>

-------------------------------------------------------------------------------------------
copy above codse after </h1> code <form>
###########################################################################################





###########################################################################################
bootstrap--> dismissible alert
-------------------------------------------------------------------------------------------

<div class="alert alert-warning alert-dismissible fade show" role="alert">
  <strong>Holy guacamole!</strong> You should check in on some of those fields below.
  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
    <span aria-hidden="true">&times;</span>
  </button>
</div>

-------------------------------------------------------------------------------------------
copy above code like below in views/partial/messages.ejs
-------------------------------------------------------------------------------------------

<% if(typeof errors !='undefined' ){ %>
    <% errors.forEach(function(error){ %>
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <%=error.msg %>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    <% }); %>
<% } %>

-------------------------------------------------------------------------------------------
copy abnove code and change to the vies/partials/messages.ejs
###########################################################################################






###########################################################################################
routes/user.js
-------------------------------------------------------------------------------------------

// User model
const User = require('../models/User.js');
-------------------------------------------------------------------------------------------
else {
        res.send('pass');
    }
-------------------------------------------------------------------------------------------
replace above code with below code
-------------------------------------------------------------------------------------------

    else {
        // validating
        User.findOne({ email: email })
            .then(user => {

                if (user) {
                    // user exist
                    errors.push({ msg: 'Email is already Registered' });
                    res.render('register', {
                        errors, name, password
                    });
                }

                else {
                    const newUser = new User({
                        name, email, password
                    });

                    console.log(newUser);
                    res.send('Hello there registration is complete');

                }
            });
    }
-------------------------------------------------------------------------------------------
above code will validate if user exist in databse if new user then it will add user to database
and redirect you to login page
###########################################################################################





###########################################################################################
routes/user.js
-------------------------------------------------------------------------------------------

// bcrypt
const bcrypt = require('bcryptjs');

-------------------------------------------------------------------------------------------
this will import bcrypt to encrypt our password
###########################################################################################





###########################################################################################
routes/user.js
-------------------------------------------------------------------------------------------

                    console.log(newUser);
                    res.send('Hello there registration is complete');

-------------------------------------------------------------------------------------------
replace above code with below code
-------------------------------------------------------------------------------------------
                    
                    // save User
                    newUser.save().then(user => {
                        res.redirect('/users/login');
                    })

-------------------------------------------------------------------------------------------
above code will save the user registration in mongodb database
###########################################################################################
 




###########################################################################################
routes/user.js
-------------------------------------------------------------------------------------------
                    // save User                   
                    newUser.save().then(user => {
                      res.redirect('/login');
                    })

-------------------------------------------------------------------------------------------
replace above code with below code
-------------------------------------------------------------------------------------------
                    // Hash Password
                    bcrypt.genSalt(10,(err, salt)=> 
                        bcrypt.hash(newUser.password, salt,(err, hash) =>{
                            if(err) throw err;
                            // Set password to hashed
                            newUser.password = hash;
                            // save User
                            newUser.save()
                            .then(user=>{
                                res.redirect('/users/login');

                            })
                            .catch(err=> console.log(err));
                    }))

-------------------------------------------------------------------------------------------
above code will encrypt user password and save it in encrypted form in database
###########################################################################################






###########################################################################################
app.js
-------------------------------------------------------------------------------------------

// flash messages
const flash = require('connect-flash');
const session = require('express-session');

-------------------------------------------------------------------------------------------

###########################################################################################




###########################################################################################
app.js
-------------------------------------------------------------------------------------------

// Express session middleware
app.use(session({
    secret: 'secret',
    resave: true,
    saveUninitialized: true,
}))

// Connect flash
app.use(flash());

// Global variables
app.use((req, res, next) => {
    res.locals.success_msg = req.flash('success_msg');
    res.locals.error_msg = req.flash('error_msg');
    next();
});

-------------------------------------------------------------------------------------------
add above code after Bodyparser

-------------------------------------------------------------------------------------------
we are imorting flash message library to displays a message after successful registration
###########################################################################################




###########################################################################################
routes/users.js
-------------------------------------------------------------------------------------------

                            // save User
                            newUser.save()
                            .then(user=>{
                                res.redirect('/users/login');
                            })

-------------------------------------------------------------------------------------------
replace above code with below
-------------------------------------------------------------------------------------------

                            // save User
                            newUser.save()
                                .then(user => {
                                    req.flash('success_msg', 'You are now registered and can Log-in');
                                    res.redirect('/users/login');
                                })

-------------------------------------------------------------------------------------------
above code will set where we have to display our flash messages
###########################################################################################






###########################################################################################
views/partials/messages.ejs
-------------------------------------------------------------------------------------------

<% if(success_msg !='' ) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <%= success_msg %>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
    </div>
<% } %>


<% if(error_msg !='' ) { %>
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <%= error_msg %>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
    </div>
<% } %>

-------------------------------------------------------------------------------------------
add above code to the views/partials/messages.ejs
###########################################################################################






###########################################################################################
views/login.ejs
-------------------------------------------------------------------------------------------
      
        <%= include ("./partials/messages.ejs"); 

-------------------------------------------------------------------------------------------
copy above codse after </h1> code  before <form>

this will show the messages after successful registration of a user "You are now registered and can Log-in"
###########################################################################################










Till here registration part is over
dont know why but this flash messages are not working










###########################################################################################
config/passport.js
-------------------------------------------------------------------------------------------

const LocalStrategy = require('passport-local').Strategy;

// Login--> if email password matches
const mongoose = require('mongoose');

// Decrypt the password in databse
const bcrypt = require('bcryptjs');

// Load User model
const User = require('../models/User');

module.exports = (passport) => {
    passport.use(
        new LocalStrategy({ usernameField: 'email' }, (email, password, done) => {
            // Match user
            User.findOne({
                email: email
            }).then(user => {
                if (!user) {
                    return done(null, false, { message: 'That email is not registered' });
                }

                // Match password
                bcrypt.compare(password, user.password, (err, isMatch) => {
                    if (err) throw err;
                    if (isMatch) {
                        return done(null, user);
                    } else {
                        return done(null, false, { message: 'Password incorrect' });
                    }
                });
            })
                .catch(err => console.log(err));
        })
    );

    passport.serializeUser((user, done) => {
        done(null, user.id);
    });

    passport.deserializeUser((id, done) => {
        User.findById(id, (err, user) => {
            done(err, user);
        });
    });
}

-------------------------------------------------------------------------------------------

###########################################################################################








###########################################################################################
app.js
-------------------------------------------------------------------------------------------

// Passport config
const passport = require('passport');
require('./config/passport')(passport);

-------------------------------------------------------------------------------------------
put above code in app.js
###########################################################################################




###########################################################################################
app.js
-------------------------------------------------------------------------------------------

// Passport middleware
app.use(passport.initialize());
app.use(passport.session());

-------------------------------------------------------------------------------------------
put above code in app.js after express session middleware codes
###########################################################################################





###########################################################################################
 routes/users.js
-------------------------------------------------------------------------------------------

// Passport
const passport = require('passport');

-------------------------------------------------------------------------------------------

###########################################################################################






###########################################################################################
routes/users.js
-------------------------------------------------------------------------------------------

// Login Handle
router.post('/login', (req, res, next) => {
    passport.authenticate('local', {
        successRedirect: '/dashboard',
        failureRedirect: '/users/login',
        failureFlash: true
    })
        (req, res, next);
});

-------------------------------------------------------------------------------------------

###########################################################################################








###########################################################################################
app.js
-------------------------------------------------------------------------------------------

    res.locals.error = req.flash('error');

-------------------------------------------------------------------------------------------
add above code to 

// Global vars
app.use((req, res, next) => {
    res.locals.success_msg = req.flash('success_msg');
    res.locals.error_msg = req.flash('error_msg');

    res.locals.error = req.flash('error');
    
    next();
});
-------------------------------------------------------------------------------------------

###########################################################################################






###########################################################################################
views/partial/messages.ejs
-------------------------------------------------------------------------------------------

<% if(error !='' ) { %>
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <%= error %>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
    </div>
<% } %>

-------------------------------------------------------------------------------------------
add above code to views/partial/messages.ejs
###########################################################################################






###########################################################################################
routes/index.js
-------------------------------------------------------------------------------------------

// Home Page
// router.get('/', (req, res) => res.send('Welcome to Home Screen hehehe'));
router.get('/', (req, res) => res.render('welcome.ejs'));

// Dashboard
router.get('/dashboard', (req, res) => res.render('dashboard.ejs'));

-------------------------------------------------------------------------------------------

###########################################################################################






###########################################################################################
views/dashboard.ejs
-------------------------------------------------------------------------------------------

<h1 class="mt-4">Dashboard</h1>
<p class="lead mb-3">Welcome user.......... <%#= user.name %></p>
<a href="/users/logout" class="btn btn-secondary">Logout</a>

-------------------------------------------------------------------------------------------

###########################################################################################





###########################################################################################
routes/user.js
-------------------------------------------------------------------------------------------

// Logout Handle
router.get('/logout', (req, res) => {
    req.session.loggedin = false;
    req.flash('success_msg', 'You are logged out');
    res.redirect('/users/login');
});

-------------------------------------------------------------------------------------------

###########################################################################################







###########################################################################################
config/auth.js

-------------------------------------------------------------------------------------------

module.exports = {
    ensureAuthenticated: (req,res,next)=>{
        if(req.isAuthenticated()){
            return next();
        }
        req.flash('error_msg', 'Please log in to view this resource');
        res.redirect('/users/login');
    }
}

-------------------------------------------------------------------------------------------

###########################################################################################





###########################################################################################
routes/index.js
-------------------------------------------------------------------------------------------

const { ensureAuthenticated } = require('../config/auth');


// Dashboard
// router.get('/dashboard', (req, res) => res.render('dashboard.ejs'));
router.get('/dashboard', ensureAuthenticated, (req, res) => res.render('dashboard.ejs'));

-------------------------------------------------------------------------------------------

###########################################################################################





###########################################################################################
routes/index.js
-------------------------------------------------------------------------------------------

// Dashboard
router.get('/dashboard', (req, res) => res.render('dashboard.ejs'));
router.get('/dashboard', ensureAuthenticated, (req, res) => res.render('dashboard.ejs'));

-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################












###########################################################################################

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------

###########################################################################################





